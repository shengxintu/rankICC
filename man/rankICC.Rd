% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rankICC.R
\name{rankICC}
\alias{rankICC}
\title{Rank-based ICC with two hierarchies}
\usage{
rankICC(
  x,
  cluster,
  weights = c("obs", "clusters", "ess", "combination"),
  conf.int = 0.95,
  fisher = FALSE,
  ...
)
}
\arguments{
\item{x}{a numeric vector of observations.}

\item{cluster}{a vector of cluster index corresponding to \code{x}.}

\item{weights}{a character string indicating which weighting method is used. Or an optional vector of user-defined weights to be used. Should be one of the strings \code{"obs"}, \code{"clusters"}, \code{"ess"}, \code{"combination"}, or a numeric vector. See Details.}

\item{conf.int}{numeric specifying confidence interval coverage.}

\item{fisher}{logical indicating whether to apply fisher transformation to compute confidence intervals.}

\item{...}{additional arguments to be passed to the iteration function if \code{weights} is \code{"ess"} or \code{"combination"}. Specifying the tolerance via \code{"tol"} and the maximum iteration times via \code{"maxIter"}.}
}
\value{
a vector with following components.
\tabular{ll}{
  \code{rankICC} \tab the rank-based ICC. \cr
  \tab \cr
  \code{SE} \tab the standard error. \cr
  \tab \cr
  \code{Lower, Upper} \tab the lower and upper bound of the confidence interval.\cr
}
}
\description{
\code{rankICC} computes the rank-based intraclass correlation coefficient (ICC) of \code{x}. It can be used with any orderable variables, including continuous and discrete variables. Different weighting methods are provided, including methods assigning equal weights to observations or clusters, iterative methods based on the effective sample size or a linear combination of the first two methods.
}
\details{
\code{"obs"} assigns equal weights to observations; \eqn{p_{ij} = 1/N}, where \var{N} is the total number of observations. \code{"clusters"} assigns equal weights to clusters; \eqn{p_{ij} = 1/(nk_i)}, where \var{n} is the total number of clusters and k_i is the cluster size. \code{"ess"} and \code{"combination"} implement iterations until convergence; \eqn{p_{ij}(\gamma_I)=1/(1+k_i\gamma_I)/\{\sum_{j=1}^n k_j/(1+k_j\gamma_I)\}} for \code{"ess"}, \eqn{p_{ij}(\gamma_I)=(1-\gamma_I)/N+\gamma_I/(nk_i)} for \code{"combination"}.
}
\examples{
\dontrun{
rankICC(x, cluster, weights = "clusters")
rankICC(x, cluster, weights = "ess", tol = 1e-4, maxIter = 10)
}
}
